@model Tuple<List<string>, List<string>>
@{
    ViewData["Title"] = "Home Page";
}

    <table>
        <tr>
            <th>Framework</th>
            <th>Count</th>
        </tr>
        @for (int i = 0; i < Model.Item1.Count - 1; i++)
        {
            <tr>
                <td>@Model.Item1[i]</td>
                <td>@Model.Item2[i]</td>
            </tr>
        }
    </table>

<script>
    var myModelLabels = @Json.Serialize(Model.Item1);
    var myModelData = @Json.Serialize(Model.Item2);
</script>

<script src="~/lib/Chart.js/Chart.js"></script>

<canvas id="myChart" width="400" height="300"></canvas>
<script>
    function dynamicColors() {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return "rgba(" + r + "," + g + "," + b + ", 0.2)";
    }

    function poolColors(a) {
        var pool = [];
        for (i = 0; i < a; i++) {
            pool.push(dynamicColors());
        }
        return pool;
    }

    function poolBorderColors(a) {
        var pool = [];
        for (i = 0; i < a; i++) {
            pool.push("rgba(128,128,128,1)"); //dark gray
        }
        return pool;
    }

    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: myModelLabels,
            //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: '# of projects by framework',
                data: myModelData,
                //data: [12, 19, 3, 5, 2, 3],
                backgroundColor: poolColors(myModelLabels.length),
                //backgroundColor: [
                //    'rgba(255, 99, 132, 0.2)',
                //    'rgba(54, 162, 235, 0.2)',
                //    'rgba(255, 206, 86, 0.2)',
                //    'rgba(75, 192, 192, 0.2)',
                //    'rgba(153, 102, 255, 0.2)',
                //    'rgba(255, 159, 64, 0.2)'
                //],
                borderColor: poolBorderColors(myModelLabels.length),
                //borderColor: [
                //    'rgba(255, 99, 132, 1)',
                //    'rgba(54, 162, 235, 1)',
                //    'rgba(255, 206, 86, 1)',
                //    'rgba(75, 192, 192, 1)',
                //    'rgba(153, 102, 255, 1)',
                //    'rgba(255, 159, 64, 1)'
                //],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
